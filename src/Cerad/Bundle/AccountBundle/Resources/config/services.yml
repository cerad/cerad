
services:
    cerad_account.manager:
        alias: fos_user.user_manager

    cerad_account.registration.form_type:
        class: Cerad\Bundle\AccountBundle\Form\Type\RegistrationFormType
        arguments: [%fos_user.model.user.class%]
        tags:
            - { name: form.type, alias: cerad_account_registration }
            
    cerad_account.create.form_type:
        class: Cerad\Bundle\AccountBundle\Form\Type\CreateFormType
        tags:
            - { name: form.type, alias: cerad_account_create }
            
    cerad_account.edit.form_type:
        class: Cerad\Bundle\AccountBundle\Form\Type\EditFormType
        tags:
            - { name: form.type, alias: cerad_account_edit }
    
    cerad_account.displayname.form_type:
        class: Cerad\Bundle\AccountBundle\Form\Type\DisplayNameFormType
        tags:
            - { name: form.type, alias: cerad_account_displayname }
            
    cerad_account.username.form_type:
        class: Cerad\Bundle\AccountBundle\Form\Type\UsernameFormType
        tags:
            - { name: form.type, alias: cerad_account_username }
            
    cerad_account.username.unique.form_type:
        class: Cerad\Bundle\AccountBundle\Form\Type\UsernameUniqueFormType
        tags:
            - { name: form.type, alias: cerad_account_username_unique }
            
    cerad_account.username.existing.form_type:
        class: Cerad\Bundle\AccountBundle\Form\Type\UsernameExistingFormType
        tags:
            - { name: form.type, alias: cerad_account_username_existing }
            
    cerad_account.email.form_type:
        class: Cerad\Bundle\AccountBundle\Form\Type\EmailFormType
        tags:
            - { name: form.type, alias: cerad_account_email }
            
    cerad_account.email.unique.form_type:
        class: Cerad\Bundle\AccountBundle\Form\Type\EmailUniqueFormType
        tags:
            - { name: form.type, alias: cerad_account_email_unique }
            
    cerad_account.password.form_type:
        class: Cerad\Bundle\AccountBundle\Form\Type\PasswordFormType
        tags:
            - { name: form.type, alias: cerad_account_password }
            
    cerad_account.password_reset.form_type:
        class: Cerad\Bundle\AccountBundle\Form\Type\PasswordResetFormType
        tags:
            - { name: form.type, alias: cerad_account_password_reset }
            
    cerad_account.signin.form_type:
        class: Cerad\Bundle\AccountBundle\Form\Type\SigninFormType
        tags:
            - { name: form.type, alias: cerad_account_signin }
           
    cerad_account.user_provider:
        class: Cerad\Bundle\AccountBundle\Security\AccountUserProvider
        arguments: 
            - '@fos_user.user_manager'
            - '@cerad_person.manager'
        
    cerad_account.user_encoder:
        class: Cerad\Bundle\AccountBundle\Security\AccountUserEncoder
        arguments: [%cerad_account_master_password%]
        
    cerad_account.user_manager:
        class: Cerad\Bundle\AccountBundle\Security\AccountUserManager
        parent:   fos_user.user_manager.default
        arguments:
            - 'Cerad\Bundle\AccountBundle\Entity\AccountIdentifier'

# ==============================================
# Validation
    cerad_account.username.unique.validator:
        class: Cerad\Bundle\AccountBundle\Validator\Constraints\UsernameUniqueValidator
        arguments: 
            - '@cerad_account.user_provider'
        tags:
            - { name: validator.constraint_validator, alias: cerad_account_username_unique }
            
    cerad_account.username.existing.validator:
        class: Cerad\Bundle\AccountBundle\Validator\Constraints\UsernameExistingValidator
        arguments: 
            - '@cerad_account.user_provider'
        tags:
            - { name: validator.constraint_validator, alias: cerad_account_username_existing }

    cerad_account.email.unique.validator:
        class: Cerad\Bundle\AccountBundle\Validator\Constraints\EmailUniqueValidator
        arguments: 
            - '@fos_user.user_manager'
        tags:
            - { name: validator.constraint_validator, alias: cerad_account_email_unique }
            
    doctrine.orm.validator.unique_if_modified: 
        class: Cerad\Bundle\AccountBundle\Validator\Constraints\UniqueIfModifiedEntityValidator
        arguments: 
            - '@doctrine'
        tags:
            - { name: validator.constraint_validator, alias: doctrine.orm.validator.unique_if_modified }
      