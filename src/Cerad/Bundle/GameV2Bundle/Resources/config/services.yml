services:
  
# ==============================================================
#   Entity Managers
# Have some dups because transitioning to different naming scheme
  cerad_gamev2.entity_manager:
    alias: doctrine.orm.gamesv2_entity_manager
        
# ==============================================================
# My Managers aka repos
# Note that class is not used for repos however a warning is generated
  cerad_gamev2.project.manager:
    class:  Cerad\Bundle\GameV2Bundle\EntityRepository\ProjectRepository
    factory_service: 'cerad_gamev2.entity_manager'
    factory_method:  'getRepository'
    arguments:  
      - 'Cerad\Bundle\GameV2Bundle\Entity\Project'
            
  cerad_gamev2.level.manager:
    class:  Cerad\Bundle\GameV2Bundle\EntityRepository\LevelRepository
    factory_service: 'cerad_gamev2.entity_manager'
    factory_method:  'getRepository'
    arguments:  
      - 'Cerad\Bundle\GameV2Bundle\Entity\Level'
            
  cerad_gamev2.field.manager:
    class:  Cerad\Bundle\GameV2Bundle\EntityRepository\FieldRepository
    factory_service: 'cerad_gamev2.entity_manager'
    factory_method:  'getRepository'
    arguments:  
      - 'Cerad\Bundle\GameV2Bundle\Entity\Field'
      
  cerad_gamev2.team.manager:
    class:  Cerad\Bundle\GameV2Bundle\EntityRepository\TeamRepository
    factory_service: 'cerad_gamev2.entity_manager'
    factory_method:  'getRepository'
    arguments:  
      - 'Cerad\Bundle\GameV2Bundle\Entity\Team'
            
  cerad_gamev2.game.manager:
    class:  Cerad\Bundle\GameV2Bundle\EntityRepository\GameRepository
    factory_service: 'cerad_gamev2.entity_manager'
    factory_method:  'getRepository'
    arguments:  
      - 'Cerad\Bundle\GameV2Bundle\Entity\Game'
      
  cerad_gamev2.schedule.manager:
    class:  Cerad\Bundle\GameV2Bundle\Schedule\ScheduleManager
    arguments:  
      - '@cerad_gamev2.project.manager'
      - '@cerad_gamev2.level.manager'
      - '@cerad_gamev2.field.manager'
      - '@cerad_gamev2.team.manager'
      - '@cerad_gamev2.game.manager'

# ======================================================
# Factores are fun
# Probably not needed
#
# Think they are needed when an instance depends on other existing instances
# Such as a team needing a level
#
  cerad_gamev2.project.factory:
    class:  Cerad\Bundle\GameV2Bundle\EntityFactory\ProjectFactory
    arguments:  
      - '@cerad_gamev2.project.manager'
      
  cerad_gamev2.team.factory:
    class:  Cerad\Bundle\GameV2Bundle\EntityFactory\TeamFactory
    arguments:  
      - '@cerad_gamev2.schedule.manager'
      
  cerad_gamev2.game.factory:
    class:  Cerad\Bundle\GameV2Bundle\EntityFactory\GameFactory
    arguments:  
      - '@cerad_gamev2.schedule.manager'

# ======================================================
# Some forms
#
  cerad_gamev2.schedule.master.search.formtype:
    class:  Cerad\Bundle\GameV2Bundle\Form\Type\Schedule\Master\SearchFormType
    arguments:  
      - '@cerad_gamev2.project.manager'
    tags:
      - { name: form.type, alias: cerad_gamev2_schedule_master_search }
